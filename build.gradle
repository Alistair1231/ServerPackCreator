plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'idea'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    embed group: 'com.typesafe', name: 'config', version: '1.4.1'
}

java {
    withSourcesJar()
    withJavadocJar()
}

jar {
    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF/maven',
                    'META-INF/maven/**',
                    'META-INF/org',
                    'META-INF/org/**',
                    'META-INF/versions',
                    'META-INF/versions/**',
                    'META-INF/DEPENDENCIES',
                    'META-INF/LICENSE',
                    'META-INF/NOTICE'
        }
    }
    manifest {
        attributes(
                'Main-Class'     : 'de.griefed.serverPackCreator.Main',
                'Description'    : 'Create serverpacks from Minecraft modpacks.',
                'Built-By'       : System.properties['user.name'],
                'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZZ").format(new Date()),
                'Created-By'     : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                'Dependencies'   : configurations.runtime.files.collect {"$it.name" }.join(', ')
        )
    }
}

sourceSets.main.runtimeClasspath.each { println it }

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Griefed/ServerPackCreator")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            artifactId='serverpackcreator'
            from (components.java)
        }
    }
}