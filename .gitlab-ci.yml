stages:
- Tests
- Documentation
- Release
- Build Release

variables:
  project_name: "$CI_PROJECT_NAME"
  SEMANTIC_RELEASE_PACKAGE: "$CI_PROJECT_NAME"

services:
  - name: griefed/gitlab-ci-cd:1.0.4
    alias: docker

Gradle Test:
  stage: Tests
  image: griefed/baseimage-ubuntu-jdk-8:2.0.0
  before_script:
  - echo "**** Running in $CI_JOB_ID ****"
  - echo "**** Java location ****"
  - which java
  - echo "**** Java version ****"
  - java -version
  - echo "**** Allowing execution of gradlew ****"
  - chmod +x gradlew
  - echo "**** Ensure clean environment ****"
  - "./gradlew about"
  script:
  - echo "**** Building ServerPackCreator ****"
  - "./gradlew installQuasar cleanFrontend assembleFrontend copyDist build createExe
    --info --no-daemon"
  - echo "**** Listing build directory ****"
  - LC_COLLATE=C ls -ahl --group-directories-first --color=auto build
  - LC_COLLATE=C ls -ahl --group-directories-first --color=auto build/libs
  - LC_COLLATE=C ls -ah --group-directories-first --color=auto build/libs/libraries
  - echo "**** Renaming files to please the eye ****"
  - mv build/libs/serverpackcreator.exe build/libs/ServerPackCreator-$CI_COMMIT_REF_NAME.exe
  - mv build/libs/serverpackcreator.jar build/libs/ServerPackCreator-$CI_COMMIT_REF_NAME.jar
  artifacts:
    paths:
    - build/libs/ServerPackCreator-$CI_COMMIT_REF_NAME.exe
    - build/libs/ServerPackCreator-$CI_COMMIT_REF_NAME.jar
    - build/reports/tests/test
    expire_in: 1 week

Docker Test:
  stage: Tests
  image: griefed/gitlab-ci-cd:1.0.4
  before_script:
  - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN" docker.io
  - docker login -u "$DOCKERHUB_USER" -p "$GITHUB_TOKEN" ghcr.io
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker buildx create --use --name grfdbuilder
  script:
  - docker buildx build --push --no-cache --platform linux/amd64,linux/arm64 
    --tag "ghcr.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_REF_NAME"
    --tag "ghcr.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_REF_NAME"
    --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    --build-arg BRANCH_OR_TAG=$CI_COMMIT_REF_NAME
    --file Dockerfile .

Release:
  stage: Release
  needs:
  - job: Gradle Test
    artifacts: false
  - job: Docker Test
    artifacts: false
  image: griefed/gitlab-ci-cd:1.0.4
  script:
  - npx semantic-release
  only:
  - master
  - main
  except:
    refs:
    - tags
    variables:
    - "$CI_COMMIT_TITLE =~ /^RELEASE:.+$/"

PreRelease:
  stage: Release
  needs:
  - job: Gradle Test
    artifacts: false
  - job: Docker Test
    artifacts: false
  image: griefed/gitlab-ci-cd:1.0.4
  script:
  - npx semantic-release
  only:
  - alpha
  - beta
  except:
    refs:
    - tags
    variables:
    - "$CI_COMMIT_TITLE =~ /^RELEASE:.+$/"

Build Release:
  stage: Build Release
  image: griefed/baseimage-ubuntu-jdk-8:2.0.0
  before_script:
  - echo "**** Running in $CI_JOB_ID ****"
  - echo "**** Java location ****"
  - which java
  - echo "**** Java version ****"
  - java -version
  - echo "**** Allowing execution of gradlew ****"
  - chmod +x gradlew
  - echo "**** Ensure clean environment ****"
  - "./gradlew about"
  script:
  - echo "**** Building ServerPackCreator ****"
  - "./gradlew installQuasar cleanFrontend assembleFrontend copyDist build createExe
    --info --no-daemon -x test"
  - echo "**** Listing build directory ****"
  - LC_COLLATE=C ls -ahl --group-directories-first --color=auto build
  - LC_COLLATE=C ls -ahl --group-directories-first --color=auto build/libs
  - LC_COLLATE=C ls -ah --group-directories-first --color=auto build/libs/libraries
  - echo "**** Renaming files to please the eye ****"
  - mv build/libs/serverpackcreator.exe build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.exe
  - mv build/libs/serverpackcreator.jar build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.jar
  - mv build/libs/serverpackcreator-javadoc.jar build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-javadoc.jar
  - mv build/libs/serverpackcreator-sources.jar build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-sources.jar
  - LC_COLLATE=C ls -ahl --group-directories-first --color=auto build/libs
  - echo "**** Uploading packages ****"
  - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.exe
    "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.exe"'
  - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.jar
    "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.jar"'
  - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-javadoc.jar
    "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-javadoc.jar"'
  - 'curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-sources.jar
    "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-sources.jar"'
  - echo "**** Create asset links ****"
  - 'curl --request POST --header "PRIVATE-TOKEN: ${GITLAB_TOKEN}" --data tag_name="${CI_COMMIT_TAG}"
    --data name="${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.exe" --data url="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.exe"
    --data link_type="package" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases/${CI_COMMIT_TAG}/assets/links"'
  - 'curl --request POST --header "PRIVATE-TOKEN: ${GITLAB_TOKEN}" --data tag_name="${CI_COMMIT_TAG}"
    --data name="${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.jar" --data url="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.jar"
    --data link_type="package" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases/${CI_COMMIT_TAG}/assets/links"'
  - 'curl --request POST --header "PRIVATE-TOKEN: ${GITLAB_TOKEN}" --data tag_name="${CI_COMMIT_TAG}"
    --data name="${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-javadoc.jar" --data url="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-javadoc.jar"
    --data link_type="package" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases/${CI_COMMIT_TAG}/assets/links"'
  - 'curl --request POST --header "PRIVATE-TOKEN: ${GITLAB_TOKEN}" --data tag_name="${CI_COMMIT_TAG}"
    --data name="${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-sources.jar" --data url="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-sources.jar"
    --data link_type="package" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases/${CI_COMMIT_TAG}/assets/links"'
  rules:
  - if: "$CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\.\\d+(-beta|-alpha)\\.\\d+$/"
  - if: "$CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\.\\d+$/"

Build Docker Release:
  stage: Build Release
  image: griefed/gitlab-ci-cd:1.0.4
  before_script:
  - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN" docker.io
  - docker login -u "$DOCKERHUB_USER" -p "$GITHUB_TOKEN" ghcr.io
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker buildx create --use --name grfdbuilder
  script:
  - docker buildx build --push --no-cache --platform linux/amd64,linux/arm64 
    --tag "ghcr.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_TAG"
    --tag "ghcr.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:latest"
    --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_TAG"
    --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:latest"
    --build-arg BRANCH_OR_TAG=$CI_COMMIT_TAG
    --file Dockerfile .
  rules:
  - if: "$CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\.\\d+$/"

Build Docker PreRelease:
  stage: Build Release
  image: griefed/gitlab-ci-cd:1.0.4
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN" docker.io
    - docker login -u "$DOCKERHUB_USER" -p "$GITHUB_TOKEN" ghcr.io
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --name grfdbuilder
  script:
    - docker buildx build --push --no-cache --platform linux/amd64,linux/arm64
      --tag "ghcr.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_TAG"
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_TAG"
      --build-arg BRANCH_OR_TAG=$CI_COMMIT_TAG
      --file Dockerfile .
  rules:
    - if: "$CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\.\\d+(-beta|-alpha)\\.\\d+$/"

pages:
  stage: Documentation
  image: griefed/baseimage-ubuntu-jdk-8:2.0.0
  before_script:
    - which java
    - chmod +x gradlew
    - "./gradlew clean"
  script:
    - "./gradlew javaDoc --info -x test"
    - cp -Rf build/docs/javadoc public
    - LC_COLLATE=C ls -ahl --group-directories-first --color=auto public
  only:
    - master
    - main
    - webservice
  artifacts:
    paths:
      - public
    expire_in: 1 week