stages:
  - test
  - docs
  - release
  - build

test gradle:
  image: griefed/baseimage-ubuntu-jdk-8:1.0.5
  stage: test
  services:
    - name: griefed/gitlab-ci-cd:1.0.1
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - echo "**** Running in $CI_JOB_ID ****"
    - echo "**** Java location ****"
    - which java
    - echo "**** Java version ****"
    - java -version
    - echo "**** Allowing execution of gradlew ****"
    - chmod +x gradlew
    - echo "**** Ensure clean environment ****"
    - ./gradlew clean
  script:
    - echo "**** Building ServerPackCreator ****"
    - ./gradlew build createExe --info
    - echo "**** Listing build directory ****"
    - LC_COLLATE=C ls -ahl --group-directories-first --color=auto
      build
    - LC_COLLATE=C ls -ahl --group-directories-first --color=auto
      build/libs
    - LC_COLLATE=C ls -ah --group-directories-first --color=auto
      build/libs/libraries
    - echo "**** Renaming files to please the eye ****"
    - mv
      build/libs/serverpackcreator.exe
      build/libs/ServerPackCreator.exe
    - mv
      build/libs/serverpackcreator.jar
      build/libs/ServerPackCreator.jar
    - mv
      build/libs/serverpackcreator-javadoc.jar
      build/libs/ServerPackCreator-javadoc.jar
    - mv
      build/libs/serverpackcreator-sources.jar
      build/libs/ServerPackCreator-sources.jar
  artifacts:
    paths:
      - build/libs/ServerPackCreator.exe
      - build/libs/ServerPackCreator.jar
      - build/libs/ServerPackCreator-javadoc.jar
      - build/libs/ServerPackCreator-sources.jar
      - build/reports/tests/test
    expire_in: 1 week
  except:
    refs:
      - tags
      - webservice
    variables:
      - $CI_COMMIT_TITLE =~ /^RELEASE:.+$/

test gradle webservice:
  image: griefed/baseimage-ubuntu-jdk-8:1.0.5
  stage: test
  services:
    - name: griefed/gitlab-ci-cd:1.0.1
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - echo "**** Running in $CI_JOB_ID ****"
    - echo "**** Java location ****"
    - which java
    - echo "**** Java version ****"
    - java -version
    - echo "**** Allowing execution of gradlew ****"
    - chmod +x gradlew
    - echo "**** Ensure clean environment ****"
    - ./gradlew clean
  script:
    - echo "**** Building ServerPackCreator ****"
    - ./gradlew installQuasar cleanFrontend assembleFrontend copyDist build createExe --info
    - echo "**** Listing build directory ****"
    - LC_COLLATE=C ls -ahl --group-directories-first --color=auto
      build
    - LC_COLLATE=C ls -ahl --group-directories-first --color=auto
      build/libs
    - LC_COLLATE=C ls -ah --group-directories-first --color=auto
      build/libs/libraries
    - echo "**** Renaming files to please the eye ****"
    - mv
      build/libs/serverpackcreator.exe
      build/libs/ServerPackCreator-webservice.exe
    - mv
      build/libs/serverpackcreator.jar
      build/libs/ServerPackCreator-webservice.jar
    - mv
      build/libs/serverpackcreator-javadoc.jar
      build/libs/ServerPackCreator-webservice-javadoc.jar
    - mv
      build/libs/serverpackcreator-sources.jar
      build/libs/ServerPackCreator-webservice-sources.jar
  artifacts:
    paths:
      - build/libs/ServerPackCreator-webservice.exe
      - build/libs/ServerPackCreator-webservice.jar
      - build/libs/ServerPackCreator-webservice-javadoc.jar
      - build/libs/ServerPackCreator-webservice-sources.jar
      - build/reports/tests/test
    expire_in: 1 week
  only:
    - webservice

test docker:
  stage: test
  image: griefed/gitlab-ci-cd:1.0.1
  services:
    - name: griefed/gitlab-ci-cd:1.0.1
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN" docker.io
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKERHUB_USER" -p "$GITHUB_TOKEN" ghcr.io
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --name grfdbuilder
  script:
    - docker buildx build
      --push
      --no-cache
      --platform linux/amd64,linux/arm/v7,linux/arm64
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:develop"
      --tag "$CI_REGISTRY_IMAGE:develop"
      --tag "ghcr.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:develop" .
  except:
    refs:
      - tags
      - webservice
    variables:
      - $CI_COMMIT_TITLE =~ /^RELEASE:.+$/

test docker webservice:
  stage: test
  image: griefed/gitlab-ci-cd:1.0.1
  services:
    - name: griefed/gitlab-ci-cd:1.0.1
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN" docker.io
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKERHUB_USER" -p "$GITHUB_TOKEN" ghcr.io
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --name grfdbuilder
  script:
    - docker buildx build
      --push
      --no-cache
      --platform linux/amd64,linux/arm/v7,linux/arm64
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:develop-web"
      --tag "$CI_REGISTRY_IMAGE:develop-web"
      --tag "ghcr.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:develop-web"
      --file Dockerfile.webservice .
  only:
    - webservice

release:
  needs:
    - job: 'test gradle'
      artifacts: false
    - job: 'test docker'
      artifacts: false
  stage: release
  image: griefed/gitlab-ci-cd:1.0.1
  services:
    - name: griefed/gitlab-ci-cd:1.0.1
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  script:
    - npx semantic-release
  only:
    - master
    - main
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TITLE =~ /^RELEASE:.+$/

build docker:
  stage: build
  image: griefed/gitlab-ci-cd:1.0.1
  services:
    - name: griefed/gitlab-ci-cd:1.0.1
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN" docker.io
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker login -u "$DOCKERHUB_USER" -p "$GITHUB_TOKEN" ghcr.io
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --name grfdbuilder
  script:
    - docker pull "$CI_REGISTRY_IMAGE:develop"
    - docker buildx build
      --push
      --platform linux/amd64,linux/arm/v7,linux/arm64
      --cache-from "$CI_REGISTRY_IMAGE:develop"
      --tag "$CI_REGISTRY_IMAGE:latest"
      --tag "ghcr.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_TAG"
      --tag "ghcr.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:latest"
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_TAG"
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:latest" .
  only:
    - tags

build release:
  image: griefed/baseimage-ubuntu-jdk-8:1.0.5
  stage: build
  services:
    - name: griefed/gitlab-ci-cd:1.0.1
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - echo "**** Running in $CI_JOB_ID ****"
    - echo "**** Java location ****"
    - which java
    - echo "**** Java version ****"
    - java -version
    - echo "**** Allowing execution of gradlew ****"
    - chmod +x gradlew
    - echo "**** Ensure clean environment ****"
    - ./gradlew clean
  script:
    - echo "**** Building ServerPackCreator ****"
    - ./gradlew build createExe --info
    - echo "**** Listing build directory ****"
    - LC_COLLATE=C ls -ahl --group-directories-first --color=auto
      build
    - LC_COLLATE=C ls -ahl --group-directories-first --color=auto
      build/libs
    - LC_COLLATE=C ls -ah --group-directories-first --color=auto
      build/libs/libraries
    - echo "**** Renaming files to please the eye ****"
    - mv
      build/libs/serverpackcreator.exe
      build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.exe
    - mv
      build/libs/serverpackcreator.jar
      build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.jar
    - mv
      build/libs/serverpackcreator-javadoc.jar
      build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-javadoc.jar
    - mv
      build/libs/serverpackcreator-sources.jar
      build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-sources.jar
    - LC_COLLATE=C ls -ahl --group-directories-first --color=auto
      build/libs
    - echo "**** Uploading packages ****"
    - 'curl
      --header "JOB-TOKEN: ${CI_JOB_TOKEN}"
      --upload-file build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.exe
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.exe"'
    - 'curl
      --header "JOB-TOKEN: ${CI_JOB_TOKEN}"
      --upload-file build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.jar
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.jar"'
    - 'curl
      --header "JOB-TOKEN: ${CI_JOB_TOKEN}"
      --upload-file build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-javadoc.jar
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-javadoc.jar"'
    - 'curl
      --header "JOB-TOKEN: ${CI_JOB_TOKEN}"
      --upload-file build/libs/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-sources.jar
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-sources.jar"'
    - echo "**** Create asset links ****"
    - 'curl
      --request POST
      --header "PRIVATE-TOKEN: ${GITLAB_TOKEN}"
      --data tag_name="${CI_COMMIT_TAG}"
      --data name="${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.exe"
      --data url="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.exe"
      --data link_type="package"
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases/${CI_COMMIT_TAG}/assets/links"'
    - 'curl
      --request POST
      --header "PRIVATE-TOKEN: ${GITLAB_TOKEN}"
      --data tag_name="${CI_COMMIT_TAG}"
      --data name="${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.jar"
      --data url="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.jar"
      --data link_type="package"
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases/${CI_COMMIT_TAG}/assets/links"'
    - 'curl
      --request POST
      --header "PRIVATE-TOKEN: ${GITLAB_TOKEN}"
      --data tag_name="${CI_COMMIT_TAG}"
      --data name="${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-javadoc.jar"
      --data url="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-javadoc.jar"
      --data link_type="package"
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases/${CI_COMMIT_TAG}/assets/links"'
    - 'curl
      --request POST
      --header "PRIVATE-TOKEN: ${GITLAB_TOKEN}"
      --data tag_name="${CI_COMMIT_TAG}"
      --data name="${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-sources.jar"
      --data url="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}-sources.jar"
      --data link_type="package"
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases/${CI_COMMIT_TAG}/assets/links"'
  only:
    - tags

pages:
  image: griefed/baseimage-ubuntu-jdk-8:1.0.5
  stage: docs
  services:
    - name: griefed/gitlab-ci-cd:1.0.1
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - which java
    - chmod +x gradlew
    - ./gradlew clean
  script:
    - ./gradlew javaDoc
    - cp -Rf build/docs/javadoc public
    - LC_COLLATE=C ls -ahl --group-directories-first --color=auto
      public
  only:
    - master
    - main
  artifacts:
    paths:
      - public
    expire_in: 1 week