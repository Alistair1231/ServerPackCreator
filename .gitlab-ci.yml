stages:
  - test
  - docs
  - release
  - build

test gradle:
  image: openjdk:8
  stage: test
  services:
    - name: docker:dind
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - which java
    - chmod +x gradlew
    - ./gradlew clean
  script:
    - ./gradlew build createExe --info
    - mv build/libs/serverpackcreator.exe build/libs/ServerPackCreator.exe
    - mv build/libs/serverpackcreator.jar build/libs/ServerPackCreator.jar
    - mv build/libs/serverpackcreator-javadoc.jar build/libs/ServerPackCreator-javadoc.jar
    - mv build/libs/serverpackcreator-sources.jar build/libs/ServerPackCreator-sources.jar
  artifacts:
    paths:
      - build/libs/ServerPackCreator.exe
      - build/libs/ServerPackCreator.jar
      - build/libs/ServerPackCreator-javadoc.jar
      - build/libs/ServerPackCreator-sources.jar
    expire_in: 1 week

test docker:
  stage: test
  image: griefed/docker-with-buildx:latest
  services:
    - name: docker:dind
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN" docker.io
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --name grfdbuilder
  script:
    - docker buildx build
      --push
      --platform linux/amd64,linux/arm/v7,linux/arm64
      --tag "$CI_REGISTRY_IMAGE:develop"
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:develop" .
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TITLE =~ /^RELEASE:.+$/

release:
  needs:
    - job: 'test gradle'
      artifacts: true
    - job: 'test docker'
      artifacts: false
  dependencies:
    - test gradle
  stage: release
  image: griefed/gitlab-semantic-release:latest
  services:
    - name: docker:dind
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  script:
    - npx semantic-release
  only:
    - master
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TITLE =~ /^RELEASE:.+$/

build docker:
  stage: build
  image: griefed/docker-with-buildx:latest
  services:
    - name: docker:dind
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN" docker.io
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --use --name grfdbuilder
  script:
    - docker pull "$CI_REGISTRY_IMAGE:develop"
    - docker buildx build
      --push
      --platform linux/amd64,linux/arm/v7,linux/arm64
      --cache-from "$CI_REGISTRY_IMAGE:develop"
      --tag "$CI_REGISTRY_IMAGE:latest"
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:$CI_COMMIT_TAG"
      --tag "index.docker.io/$DOCKERHUB_USER/$DOCKERHUB_REPO:latest" .
  only:
    - tags

docs:
  image: openjdk:8
  stage: docs
  services:
    - name: docker:dind
      alias: docker
  variables:
    project_name: $CI_PROJECT_NAME
    SEMANTIC_RELEASE_PACKAGE: $CI_PROJECT_NAME
  before_script:
    - which java
    - chmod +x gradlew
    - ./gradlew clean
  script:
    - ./gradlew javaDoc
    - cp -Rf build/docs/javadoc public
  artifacts:
    paths:
      - public
    expire_in: 1 week
  only:
    - tags