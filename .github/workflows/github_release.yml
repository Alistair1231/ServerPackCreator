name: Create GitHub Release after GitLab tag mirror

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  preparations:
    runs-on: ubuntu-latest
    # OUTPUTS
    outputs:
      version: ${{ steps.tag.outputs.tag }}

    steps:
      # GET THE LATEST CODE
      - name: Checkout latest code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      # EXTRACT TAG FROM PUSH
      - name: Get tag
        id: tag
        uses: tj-actions/branch-names@v6.3
      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}

  jar:
    needs: preparations
    runs-on: ubuntu-latest

    steps:
      # GET THE LATEST CODE
      - name: Checkout latest code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      # BUILD PROJECT AND PUBLISH
      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'zulu'
          java-version: '17'
          check-latest: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - uses: gradle/gradle-build-action@v2.3.3
        with:
          gradle-version: wrapper

      - name: Build release
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew -Pversion="${{ needs.preparations.outputs.version }}" build --info --full-stacktrace -x :serverpackcreator-api:jvmTest -x :serverpackcreator-web:test

      # UPLOAD ARTIFACTS
      - uses: actions/upload-artifact@v3.1.2
        if: ${{ always() }}
        with:
          name: build-artifacts
          path: |
            serverpackcreator-api/build
            serverpackcreator-app/build
            serverpackcreator-cli/build
            serverpackcreator-web/build
            serverpackcreator-updater/build
            serverpackcreator-web-frontend/dist
            serverpackcreator-plugin-example/build
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

      - name: Rename JAR
        run: mv serverpackcreator-app/build/libs/serverpackcreator-app-${{ needs.preparations.outputs.version }}.jar serverpackcreator-app/build/libs/ServerPackCreator-${{ needs.preparations.outputs.version }}.jar

      # UPLOAD ARTIFACTS
      - uses: actions/upload-artifact@v3.1.2
        if: ${{ always() }}
        with:
          name: release-artifacts
          path: |
            serverpackcreator-app/build/libs/ServerPackCreator-${{ needs.preparations.outputs.version }}.jar
            serverpackcreator-plugin-example/build/libs/serverpackcreator-plugin-example-${{ needs.preparations.outputs.version }}.jar
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

  installers:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest,ubuntu-latest,windows-latest]
    needs: preparations
    runs-on: ${{ matrix.os }}

    steps:
      # GET THE LATEST CODE
      - name: Checkout latest code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      # BUILD PROJECT AND PUBLISH
      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'zulu'
          java-version: '17'
          check-latest: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - uses: gradle/gradle-build-action@v2.3.3
        with:
          gradle-version: wrapper

      - name: Prepare wix-toolset
        if: matrix.os == 'windows-latest'
        run: echo "${env:path};${env:wix}bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Build installer
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew :serverpackcreator-app:jpackage -Pversion="${{ needs.preparations.outputs.version }}" --info --full-stacktrace -x :serverpackcreator-api:jvmTest -x :serverpackcreator-web:test

      - name: List After Build
        run: ls serverpackcreator-app/build/dist/

      - name: Rename MacOs
        if: matrix.os == 'macos-latest'
        run: mv serverpackcreator-app/build/dist/ServerPackCreator-*.dmg serverpackcreator-app/build/dist/ServerPackCreator-Installer-MacOS-${{ needs.preparations.outputs.version }}.dmg

      - name: Rename Windows
        if: matrix.os == 'windows-latest'
        run: mv serverpackcreator-app/build/dist/ServerPackCreator-*.msi serverpackcreator-app/build/dist/ServerPackCreator-Installer-Windows-${{ needs.preparations.outputs.version }}.msi

      - name: Rename Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: mv serverpackcreator-app/build/dist/serverpackcreator_*.deb serverpackcreator-app/build/dist/ServerPackCreator-Installer-Ubuntu-${{ needs.preparations.outputs.version }}-amd64.deb

      - name: Artifacts
        uses: actions/upload-artifact@v3.1.2
        if: ${{ always() }}
        with:
          name: release-artifacts
          path: |
            serverpackcreator-app/build/dist/*
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

  prerelease:
    runs-on: ubuntu-latest
    needs: [preparations, jar, installers]

    steps:
      # GET THE LATEST CODE
      - name: Checkout latest code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      # GET RELEASE INFO
      - name: Get Release Info
        run: |
          curl --header \
          'PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}' \
          'https://git.griefed.de/api/v4/projects/63/releases/${{steps.tag.outputs.tag}}' >> version.json

      # GET DESCRIPTION
      - name: Extract version changelog
        uses: sergeysova/jq-action@v2.2.1
        id: description
        with:
          cmd: "jq .description version.json -r | sed -e 's/\\n/\\n/g' > description.txt"
          multiline: true

      - uses: actions/download-artifact@v3.0.2
        with:
          name: release-artifacts

      # GENERATE RELEASE
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v0.1.15
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ needs.preparations.outputs.version }}
          name: Release ${{ needs.preparations.outputs.version }}
          body_path: description.txt
          draft: false
          prerelease: false
          fail_on_unmatched_files: false
          files: |
            ServerPackCreator-Installer-MacOS-${{ needs.preparations.outputs.version }}.dmg
            ServerPackCreator-Installer-Windows-${{ needs.preparations.outputs.version }}.msi
            ServerPackCreator-Installer-Ubuntu-${{ needs.preparations.outputs.version }}-amd64.deb
            ServerPackCreator-${{ needs.preparations.outputs.version }}.jar
            serverpackcreator-plugin-example-${{ needs.preparations.outputs.version }}.jar

  pages:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build documentation
        run: ./gradlew :serverpackcreator-api:dokkaHtml -Pversion="${{ needs.preparations.outputs.version }}" --full-stacktrace --info -x test

      - uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: serverpackcreator-api/build/dokka/
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

      # DEPLOY TO GH-PAGES
      - name: Deploy to GitHub-Pages
        uses: JamesIves/github-pages-deploy-action@v4.4.0
        with:
          branch: gh-pages
          folder: serverpackcreator-api/build/dokka
