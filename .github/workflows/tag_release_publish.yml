name: Tag & Release & Publish

on:
  pull_request:
    types: [closed]
    branches:
      - main

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - id: conventional_changelog
        uses: ardalanamini/auto-changelog@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Changelog
        uses: Bullrich/generate-release-changelog@2.0.0
        id: changelog
        env:
          REPO: ${{ github.repository }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - id: compute_tag
        uses: craig-day/compute-tag@v10
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version_scheme: semantic
          version_type: patch

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.compute_tag.outputs.next_tag }}
          release_name: "ServerPackCreator"
          body: |
            Automatic release of ${{ steps.compute_tag.outputs.next_tag }}
            **Changes in this release:**
            ${{ steps.changelog.outputs.changelog }}
            ---
            **Conventional Commit Changelog Test:**
            ${{ steps.conventional_changelog.outputs.changelog }}
          draft: false
          prerelease: true

      - name: Publish to GitHub Packages
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_VERSION=$(echo "${{ steps.compute_tag.outputs.next_tag }}")
          echo "New version: ${NEW_VERSION}"
          echo "Github username: ${GITHUB_ACTOR}"
          ./gradlew -Pversion=${NEW_VERSION} publish
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/ServerPackCreator-${{ steps.compute_tag.outputs.next_tag }}.jar
          asset_name: ServerPackCreator-${{ steps.compute_tag.outputs.next_tag }}.jar
          asset_content_type: application/jar
