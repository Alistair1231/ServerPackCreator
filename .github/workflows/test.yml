name: Test

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  jar:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3.1.0

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6.3

      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'zulu'
          java-version: '17'
          check-latest: true
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - uses: gradle/gradle-build-action@v2.3.3
        with:
          gradle-version: wrapper

      - name: Build with Gradle
        run: ./gradlew -Pversion=${{ steps.branch-name.outputs.current_branch }} build --info --full-stacktrace

      - uses: actions/upload-artifact@v3.1.1
        if: ${{ always() }}
        with:
          name: build-artifacts
          path: |
            build
            buildSrc/build
            serverpackcreator-api/build
            serverpackcreator-app/build
            serverpackcreator-cli/build
            serverpackcreator-web/build
            serverpackcreator-updater/build
            serverpackcreator-web-frontend/dist
            serverpackcreator-plugin-example/build
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

  installers:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest,ubuntu-latest,windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # GET THE LATEST CODE
      - name: Checkout latest code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      # BUILD PROJECT AND PUBLISH
      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'zulu'
          java-version: '17'
          check-latest: true
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - uses: gradle/gradle-build-action@v2.3.3
        with:
          gradle-version: wrapper

      - name: Prepare wix-toolset
        if: matrix.os == 'windows-latest'
        run: echo "${env:path};${env:wix}bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Build installer
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew :serverpackcreator-app:jpackage --info --full-stacktrace

      - name: Rename MacOs
        if: matrix.os == 'macos-latest'
        run: mv serverpackcreator-app/build/dist/* serverpackcreator-app/build/dist/ServerPackCreator-Installer-MacOS-dev.dmg

      - name: Rename Windows
        if: matrix.os == 'windows-latest'
        run: mv serverpackcreator-app/build/dist/* serverpackcreator-app/build/dist/ServerPackCreator-Installer-Windows-dev.msi

      - name: Rename Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: mv serverpackcreator-app/build/dist/* serverpackcreator-app/build/dist/ServerPackCreator-Installer-Ubuntu-dev-amd64.deb

      # UPLOAD OS-SPECIFICS
      - name: Upload
        uses: actions/upload-artifact@v3.1.1
        if: ${{ always() }}
        with:
          name: build-artifacts
          path: |
            serverpackcreator-app/build/dist/*
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

  qodana:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2022.3.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          use-caches: false
          cache-default-branch-only: true