name: Create GitHub Pre-Release after GitLab tag mirror

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-pre.[0-9]+'

jobs:
  prerelease:
    runs-on: ubuntu-latest
    # OUTPUTS
    outputs:
      newtag: ${{ steps.tag.outputs.tag }}
      uploadurl: ${{ steps.create_release.outputs.upload_url }}
    steps:
      # GET THE LATEST CODE
      - name: Checkout latest code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      # EXTRACT TAG FROM PUSH
      - name: Get tag
        id: tag
        uses: tj-actions/branch-names@v6.3
      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}

      # GET RELEASE INFO
      - name: Get Release Info
        run: |
          curl --header \
          'PRIVATE-TOKEN: ${{ secrets.GITLAB_TOKEN }}' \
          'https://git.griefed.de/api/v4/projects/63/releases/${{steps.tag.outputs.tag}}' >> version.json

      # GET DESCRIPTION
      - name: Extract version changelog
        uses: sergeysova/jq-action@v2.2.1
        id: description
        with:
          cmd: "jq .description version.json -r | sed -e 's/\\n/\\n/g' > description.txt"
          multiline: true

      # BUILD PROJECT AND PUBLISH
      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'zulu'
          java-version: '17'
          check-latest: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - uses: gradle/gradle-build-action@v2.3.3
        with:
          gradle-version: wrapper
      - name: Build release
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew -Pversion="${{steps.tag.outputs.tag}}" build --info --full-stacktrace -x test

      # UPLOAD ARTIFACTS
      - uses: actions/upload-artifact@v3.1.1
        if: ${{ always() }}
        with:
          name: build-artifacts-gradle
          path: |
            serverpackcreator-api/build
            serverpackcreator-app/build
            serverpackcreator-cli/build
            serverpackcreator-web/build
            serverpackcreator-updater/build
            serverpackcreator-web-frontend/dist
            serverpackcreator-plugin-example/build
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

      - name: Rename JAR
        run: mv serverpackcreator-app/build/libs/serverpackcreator-app-${{steps.tag.outputs.tag}}.jar serverpackcreator-app/build/libs/ServerPackCreator-${{steps.tag.outputs.tag}}.jar

      # GENERATE RELEASE
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v0.1.15
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{steps.tag.outputs.tag}}
          name: Pre-Release ${{steps.tag.outputs.tag}}
          body_path: description.txt
          draft: false
          prerelease: true
          fail_on_unmatched_files: false
          files: |
            serverpackcreator-app/build/libs/ServerPackCreator-${{steps.tag.outputs.tag}}.jar
            serverpackcreator-plugin-example/build/libs/serverpackcreator-plugin-example-${{steps.tag.outputs.tag}}.jar

  installers:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest,ubuntu-latest,windows-latest]
    needs: prerelease
    runs-on: ${{ matrix.os }}
    steps:
      # GET THE LATEST CODE
      - name: Checkout latest code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      # BUILD PROJECT AND PUBLISH
      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'zulu'
          java-version: '17'
          check-latest: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - uses: gradle/gradle-build-action@v2.3.3
        with:
          gradle-version: wrapper

      - name: Prepare wix-toolset
        if: matrix.os == 'windows-latest'
        run: echo "${env:path};${env:wix}bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Build installer
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew :serverpackcreator-app:jpackage -Pversion="${{ needs.prerelease.outputs.newtag }}" --info --full-stacktrace

      - name: List After Build
        run: ls -ahl serverpackcreator-app/build/dist/

      - name: Rename MacOs
        if: matrix.os == 'macos-latest'
        run: mv serverpackcreator-app/build/dist/* serverpackcreator-app/build/dist/ServerPackCreator-Installer-MacOS-${{ needs.prerelease.outputs.newtag }}.dmg

      - name: Rename Windows
        if: matrix.os == 'windows-latest'
        run: mv serverpackcreator-app/build/dist/* serverpackcreator-app/build/dist/ServerPackCreator-Installer-Windows-${{ needs.prerelease.outputs.newtag }}.msi

      - name: Rename Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: mv serverpackcreator-app/build/dist/* serverpackcreator-app/build/dist/ServerPackCreator-Installer-Ubuntu-${{ needs.prerelease.outputs.newtag }}-amd64.deb

      - name: Artifacts
        uses: actions/upload-artifact@v3.1.1
        if: ${{ always() }}
        with:
          name: build-artifacts
          path: |
            serverpackcreator-app/build/dist/*
          if-no-files-found: warn # 'warn' or 'ignore' are also available, defaults to `warn`

      - name: List After Rename
        run: ls -ahl serverpackcreator-app/build/dist/

      # UPLOAD OS-SPECIFICS
      - name: Upload
        id: upload-release-asset
        uses: nanoufo/action-upload-artifacts-and-release-assets@v1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: |
            serverpackcreator-app/build/dist/*
          if-no-files-found: warn
          upload-release-files: true
          release-upload-url: ${{ needs.prerelease.outputs.uploadurl }}
